
#기본 port는 8080 (우리 PC는 Oracle이 이미 8080을 사용하고 있음.
#필수 변경은 아니지만 오라클에서 8080 포트를 사용하고 있어서 작성함.
server.port=7777
app.title=shinhan

#스키마생성 (create, create-drop, update:변경 부분만 반영, validate, none)
# table을 자동생성 할 것인지 , 수동생성 할 것인지
#큰 규모의 프로젝트는 테이블을 별도로 생성하고 코드를 작성하는 것이 일반적이다.
#create는 실행할때마다 만들어서 update로 수정해야함.
#DDL(Creat, Drop, ....)
spring.jpa.hibernate.ddl-auto=update
# DDL생성시 데이터베이스 고유의 기능을 사용하는가?
spring.jpa.generate-ddl=false
#실행되는 SQL문을 보여줄 것인가? 
spring.jpa.show-sql=true


#### Spring Boot 이용, JPA 사용, Oracle 혹은 MySQL ###
# 1.Driver 설치(pom.xml)
# 2.application.properties 설정파일에 속성들을 설정한다.

#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost/xe
#spring.datasource.username=hr
#spring.datasource.password=hr
#spring.jpa.database=oracle
#spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

#spring.datasource.url=jdbc:mysql://localhost:3306/hr?characterEncoding=UTF-8&serverTimezone=UTC
#spring.datasource.url=jdbc:mysql://192.168.0.38:3306/hr?characterEncoding=UTF-8&serverTimezone=UTC
#spring.datasource.username=hr
#spring.datasource.password=hr
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.hibernate.hbm2ddl.auto=update
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQLDialect


# Postgresql
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=tiger12345!

# JPA
spring.jpa.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql = true

# [ PPT 110p ]
#thymeleaf는 설정없이도 기본설정에 의해 수행가능하다.
#spring.thymeleaf.enabled=true
#spring.thymeleaf.prefix=classpath:templates/
#spring.thymeleaf.check-template-location=true
#spring.thymeleaf.suffix=.html (확장자는 default로 html이다. )
#spring.thymeleaf.cache=false 
#thymeleaf를 사용하다 수정 사항이 생길 때 수정을 하면 재시작을 해줘야 한다. 
#이를 무시하고 브라우저 새로고침시 수정사항 반영을 위해 cache=false로 설정한다.
#운영시는 true로 설정한다. 


